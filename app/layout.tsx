// app/layout.tsx
import "@ant-design/v5-patch-for-react-19";
import "antd/dist/reset.css";
import { AntdRegistry } from '@ant-design/nextjs-registry';
import { ClerkProvider } from '@clerk/nextjs';
import { ConfigProvider } from 'antd';
import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import { cookies, headers } from 'next/headers';
import React from 'react';
import { ThemeProvider } from "context/ThemeContext";
import Providers from "./providers";

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});
const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Clerk Next.js Quickstart',
  description: 'Generated by create next app',
};

// Lista de locales soportados y fallback
const SUPPORTED_LOCALES = ['es', 'en', 'fr'];
const DEFAULT_LOCALE = 'es';

export default async function RootLayout({ children }: { children: React.ReactNode }) {
  const cookieStore = await cookies()
  const headerStore = await headers()
  // 1. Leer cookie NEXT_LOCALE si existe
  const cookieLocale = cookieStore.get('NEXT_LOCALE')?.value;
  // 2. Si no, usar el header Accept-Language
  const accept = headerStore.get('accept-language') ?? '';
  const detected = accept.split(',')[0]?.split('-')[0];
  // 3. Seleccionar locale válido o usar el por defecto
  const locale = ((cookieLocale || detected) && SUPPORTED_LOCALES.includes(cookieLocale || detected))
    ? (cookieLocale || detected)
    : DEFAULT_LOCALE;
  // 4. Cargar dinámicamente el JSON de mensajes
  const messages = (await import(`./messages/${locale}.json`)).default;

  return (
    <ClerkProvider dynamic>
      <html lang={locale}>
        <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
          <ConfigProvider>
            <AntdRegistry>
              <Providers locale={locale!} messages={messages}>
                <ThemeProvider>{children}</ThemeProvider>
              </Providers>
            </AntdRegistry>
          </ConfigProvider>
        </body>
      </html>
    </ClerkProvider>
  );
}
